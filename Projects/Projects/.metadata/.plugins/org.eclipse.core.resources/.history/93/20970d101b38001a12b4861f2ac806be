package com.capgemini.forestrymanagementsystemspringboot.dao;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.PersistenceUnit;
import javax.persistence.TypedQuery;

import org.springframework.stereotype.Repository;

import com.capgemini.forestrymanagementsystemspringrest.dto.ProductBean;
import com.capgemini.forestrymanagementsystemspringrest.exception.CustomerException;

@Repository
public class ProductDaoImpl implements ProductDao {

	@PersistenceUnit
	private EntityManagerFactory factory;

	@Override
	public boolean addProduct(ProductBean bean) {
		EntityManager manager = factory.createEntityManager();
		EntityTransaction transaction = manager.getTransaction();
		transaction.begin();
		try {
			manager.persist(bean);
			transaction.commit();
			return true;
		} catch (Exception e) {
			e.printStackTrace();
			throw new CustomerException("the product with this ID already exist");
		}
	}

	@Override
	public List<ProductBean> getAllProduct() {
		String jpql = "from ProductBean";
		EntityManager manager = factory.createEntityManager();
		TypedQuery<ProductBean> query = manager.createQuery(jpql, ProductBean.class);
		return query.getResultList();

	}

	@Override
	public boolean modifyProduct(int id, String pname, double pcost) {
		EntityManager manager = factory.createEntityManager();
		EntityTransaction transaction = manager.getTransaction();
		transaction.begin();
		ProductBean productBean = manager.find(ProductBean.class, id);

			productBean.setPname(pname);
			productBean.setPcost(pcost);
			transaction.commit();
		return true;
	}

	@Override
	public boolean deleteProduct(int id) {
		EntityManager manager = factory.createEntityManager();
		EntityTransaction transaction = manager.getTransaction();
		transaction.begin();
		ProductBean bean = manager.find(ProductBean.class, id);
		if (bean != null) {
			manager.remove(bean);
			transaction.commit();
			return true;
		}
		throw new CustomerException("Product Not Found");
	}

	@Override
	public List<ProductBean> searchProduct(String key) {
		String jpql = "from ProudctBean where pname=:pname";
		EntityManager manager = factory.createEntityManager();
		TypedQuery<ProductBean> query = manager.createQuery(jpql, ProductBean.class);
		query.setParameter("pname", key);
		query.getSingleResult();
		return query.getResultList();
	}

}
