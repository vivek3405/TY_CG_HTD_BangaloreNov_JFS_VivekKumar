package com.capgemini.forestrymanagementsystemspringrest.dao;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.PersistenceUnit;
import javax.persistence.TypedQuery;

import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Repository;

import com.capgemini.forestrymanagementsystemspringrest.dto.CustomerBean;
import com.capgemini.forestrymanagementsystemspringrest.exception.CustomerException;

@Repository
public class CustomerDaoImpl implements CustomerDao {
	
	@PersistenceUnit
	private EntityManagerFactory factory;

	@Override
	public CustomerBean auth(String email, String password) {
		EntityManager manager=factory.createEntityManager();
		String jpql="from EmployeeBean where email=:email";
		TypedQuery<CustomerBean> query=manager.createQuery(jpql, CustomerBean.class);
		query.setParameter("email", email);
		//query.setParameter("password", password);
		try {
			CustomerBean bean=query.getSingleResult();
			BCryptPasswordEncoder encoder=new BCryptPasswordEncoder();
			if(encoder.matches(password, bean.getPassword())){
				return bean;
			}else {
				throw new CustomerException("Password Invalid");
			}
		} catch (Exception e) {
			throw new CustomerException("Email Invalid");
		}
	}
	@Override
	public boolean register(CustomerBean bean) {
		EntityManager manager= factory.createEntityManager();
		EntityTransaction transaction=manager.getTransaction();
		transaction.begin();
		try {
			manager.persist(bean);
			transaction.commit();
			return true;
		} catch (Exception e) {
			e.printStackTrace();
			throw new CustomerException("Email already exist");
		}
	}

	@Override
	public List<CustomerBean> getAllCustomer(String key) {
		String jpql="from EmployeeBean where name=:name or email=:email";
		EntityManager manager=factory.createEntityManager();
		TypedQuery<CustomerBean> query=manager.createQuery(jpql, CustomerBean.class);
		query.setParameter("name", key);
		query.setParameter("email", key);
		query.getSingleResult();
		return query.getResultList();
	}

	@Override
	public boolean changePassword(int id, String password) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean deleteCustomer(int id) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean searchCustomer(int id) {
		// TODO Auto-generated method stub
		return false;
	}

}
